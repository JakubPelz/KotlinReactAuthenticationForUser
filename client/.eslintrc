{
    "parser": "@typescript-eslint/parser",
    "extends": ["eslint:recommended", "plugin:prettier/recommended", "prettier"],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "sourceType": "module"
    },
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "plugins": ["react", "@typescript-eslint", "react-hooks", "unused-imports", "import"],
    "ignorePatterns": ["english.ts", "czech.ts"],
    "settings": {
        "import/extensions": [".ts", ".tsx"],
        "import/resolver": {
            "node": {
                "extensions": [".ts", ".tsx", ".json"]
            }
        },
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        // Strict mode
        "strict": ["error", "never"],

        // Code style
        "no-console": "off",
        "no-alert": "off",
        "no-var": 2,
        "prefer-const": "off",
        "block-scoped-var": "error",
        "camelcase": ["error", { "allow": ["^UNSAFE_", "^opt_"] }],
        "func-names": ["error", "never"],
        "jsx-quotes": [1, "prefer-double"],
        "new-cap": [1, { "newIsCap": true, "capIsNew": false }],
        "no-array-constructor": 2,
        "no-nested-ternary": 0,
        "no-new-object": 2,
        "no-extra-parens": ["warn", "functions"],
        "no-underscore-dangle": 0,
        "one-var": ["warn", "never"],
        "spaced-comment": [
            "warn",
            "always",
            {
                "exceptions": ["-", "+"],
                "markers": ["=", "!"]
            }
        ],
        "comma-dangle": "error",
        "default-case": "error",
        "dot-notation": [
            2,
            {
                "allowKeywords": true
            }
        ],
        "guard-for-in": 1,
        "no-with": 2,
        "no-return-assign": 2,
        "no-redeclare": 2,
        "no-proto": 2,
        "no-caller": 2,
        "no-else-return": "error",
        "no-eq-null": 2,
        "no-eval": 2,
        "no-extend-native": 2,
        "no-extra-bind": "error",
        "no-fallthrough": 2,
        "no-floating-decimal": 2,
        "no-implied-eval": 2,
        "no-lone-blocks": 2,
        "no-multi-str": 2,
        "no-native-reassign": 2,
        "no-new": 0,
        "no-new-func": 2,
        "no-new-wrappers": 2,
        "no-octal": 2,
        "no-octal-escape": 2,
        "no-param-reassign": 0,
        "radix": ["error", "as-needed"],
        "space-unary-ops": 1,
        "array-bracket-spacing": 1,
        "no-multi-spaces": ["error", { "ignoreEOLComments": false }],
        "prefer-spread": 0,

        // Struktura
        "no-cond-assign": 2,
        "no-constant-condition": 2,
        "no-control-regex": 2,
        "no-debugger": 1,
        "no-dupe-args": 2,
        "no-dupe-keys": 2,
        "no-duplicate-case": 2,
        "no-extra-semi": 2,
        "no-irregular-whitespace": 2,
        "no-negated-in-lhs": 2,
        "use-isnan": 2,
        "no-loop-func": "error",
        "no-sequences": 2,
        "no-throw-literal": 2,
        "no-unused-expressions": 0,
        "no-void": 2,
        "wrap-iife": 2,
        "yoda": 2,
        "no-empty-function": [2, { "allow": ["arrowFunctions"] }],

        // Vzhled kodu
        "consistent-this": [1, "_this"],
        "eol-last": 1,
        "func-style": 0,
        "key-spacing": [1, { "beforeColon": false, "afterColon": true }],
        "new-parens": 1,
        "newline-after-var": 0,
        "no-lonely-if": 1,
        "no-mixed-spaces-and-tabs": 1,
        "no-multiple-empty-lines": [1, { "max": 2 }],
        "quotes": [1, "single"],
        "semi": [2, "always"],
        "arrow-parens": ["error", "as-needed"],
        "max-depth": [2, 5],
        "max-len": [1, 120, 2, { "ignoreComments": true }],

        // Promenne
        "no-shadow": 0,
        "no-shadow-restricted-names": 2,
        "no-undef": 2,
        "no-undef-init": 2,

        // ES6
        "generator-star-spacing": [2, "before"],

        "@typescript-eslint/no-empty-function": 0,
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-interface": 0,
        "@typescript-eslint/no-shadow": ["error"],

        // React
        "react/display-name": 0,
        "react/jsx-boolean-value": ["error", "always"],
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-curly-spacing": 1,
        "react/jsx-max-props-per-line": 0,
        "react/jsx-indent-props": 0,
        "react/jsx-no-duplicate-props": 1,
        "react/jsx-no-undef": [1, { "allowGlobals": true }],
        "react/jsx-sort-prop-types": 0,
        "react/jsx-sort-props": 0,
        "react/jsx-uses-react": 1,
        "react/jsx-uses-vars": 1,
        "react/no-danger": 0,
        "react/no-set-state": 0,
        "react/no-did-mount-set-state": 1,
        "react/no-did-update-set-state": 1,
        "react/no-multi-comp": 0,
        "react/no-unknown-property": 1,
        "react/prop-types": 0,
        "react/react-in-jsx-scope": 1,
        "react/self-closing-comp": 1,
        "react/sort-comp": 1,
        "react/jsx-wrap-multilines": 1,
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react/no-children-prop": 0,

        // unused-imports
        "unused-imports/no-unused-imports": "error",

        // Forbid mutable exports
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md
        "import/no-mutable-exports": "error",

        // disallow non-import statements appearing before import statements
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md
        "import/first": "error",

        // disallow duplicate imports
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md
        "import/no-duplicates": "error",

        // Ensure consistent use of file extension within the import path
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "tsx": "never",
                "ts": "never"
            }
        ],

        // ensure absolute imports are above relative imports and that unassigned imports are ignored
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/order.md
        "import/order": ["error", { "groups": [["builtin", "external", "internal"]] }],

        // Require a newline after the last import/require in a group
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/newline-after-import.md
        "import/newline-after-import": ["error", { "count": 1 }],

        "object-curly-newline": [
            "error",
            {
                "ObjectExpression": { "multiline": true, "minProperties": 1 },
                "ObjectPattern": { "multiline": true },
                "ImportDeclaration": { "multiline": true },
                "ExportDeclaration": { "multiline": true, "minProperties": 3 }
            }
        ],
        
        // Ensures that there are no useless path segments
        // https://github.com/benmosher/eslint-plugin-import/blob/ebafcbf59ec9f653b"error"ac"error"a0156ca3bcba0a7cf57/docs/rules/no-useless-path-segments.md
        "import/no-useless-path-segments": ["error", { "commonjs": true }],

        // Typescript
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/prefer-interface": 0,
        "@typescript-eslint/ban-types": 0,
        "@typescript-eslint/no-explicit-any": ["error"],
        "@typescript-eslint/explicit-function-return-type": 0,
        "@typescript-eslint/camelcase": 0,
        "@typescript-eslint/explicit-member-accessibility": 0,
        "@typescript-eslint/array-type": ["error", { "default": "array" }],
        "@typescript-eslint/ban-ts-comment": 0,
        "@typescript-eslint/no-use-before-define": ["error", { "functions": true, "classes": true, "variables": true }]
    }
}
